<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
    <title>CLI! CLI! CLI!</title>
    <link href="https://cj-bc.github.io/blog/feeds/atom/tagblender.xml" rel="self" />
    <link href="https://cj-bc.github.io/blog" />
    <id>https://cj-bc.github.io/blog/feeds/atom/tagblender.xml</id>
    <author>
        <name>Cj-bc a.k.a Cj.BC_SD</name>
        <email>cj.bc-sd@outlook.jp</email>
    </author>
    <updated>2020-10-24T00:00:00Z</updated>
    <entry>
    <title>VRM_IMPORTER_for_BlenderでVRMモデルを作る際の注意点</title>
    <link href="https://cj-bc.github.io/blog/posts/2020-10-24-blender-vrmImporter-Not-Object-on-origin.html" />
    <id>https://cj-bc.github.io/blog/posts/2020-10-24-blender-vrmImporter-Not-Object-on-origin.html</id>
    <published>2020-10-24T00:00:00Z</published>
    <updated>2020-10-24T00:00:00Z</updated>
    <summary type="html"><![CDATA[<div class="info">
  <ul>
    <li>Posted on October 24, 2020</li>
    <li>Updated on October 26, 2020</li>
  </ul>
    
</div>
<div class="info">
  
  Tags: <a title="All pages tagged &#39;VRM&#39;." href="/tags/VRM.html">VRM</a>, <a title="All pages tagged &#39;blender&#39;." href="/tags/blender.html">blender</a>, <a title="All pages tagged &#39;VRM_IMPORTER_for_Blender&#39;." href="/tags/VRM_IMPORTER_for_Blender.html">VRM_IMPORTER_for_Blender</a>
  
</div>

<h1>全てのメッシュの原点(Origin)を <em>ワールド座標系の</em> 原点に置く</h1>
<blockquote>
<p>There are not an object on the origin <mesh名> (もしくは) <mesh名> が原点座標にありません</p>
</blockquote>
<p>というエラーについて。単刀直入にいうと、 全てのメッシュは <strong>Originをワールド座標系の原点におく必要があります</strong></p>
<p>これは、 <strong><code>Set origin&gt; Origin to Geometry</code>とは違う</strong> ので注意してください。</p>
<p>これをするには、</p>
<ol>
<li>3Dカーソルを原点に移動</li>
<li>オブジェクトを選択</li>
<li><code>Set origin&gt; Origin to 3D cursor</code></li>
</ol>
<p>の手順を踏みます。</p>
<h1>追加したmeshオブジェクトのtransformは全て0(scaleは1)にする</h1>
<p>Blender上では全然問題なく見えますが、これをしておかないとexportした後に変な位置にオブジェクトが表示されてしまいます。 (私は<code>3tenePRO</code>で動作確認をしていますが、おそらく他でもそうなると思います。)<br />
具体的には、「全てのトランスフォームが0(scaleは1)に指定された通りに表示」されます。</p>
<h2>具体例:</h2>
<p>scaleが1になっていない例 <img src="/images/sscale_isnt_1.jpeg" alt="scaleが1じゃない" /></p>
<p>scaleが1になるように調整した例 <img src="/images/scale_is_1.jpeg" alt="scaleが1" /></p>
<p>rotationが0になっていない例 <img src="/images/rotation_isnt_0.jpeg" alt="rotationが0じゃない" /></p>
<p>rotationが0になっている例 <img src="/images/rotation_is_0.jpeg" alt="rotationが0" /></p>
<h2>直し方</h2>
<p>Inspectorで各transformの値を確認します。そうしたら、それを覚えておき値は0に修正。 <code>Edit mode</code>に移行して、 <strong>originを中心に、軸を指定して先ほど覚えた値分</strong> 回転させます。</p>
<h2>最終系</h2>
<p>綺麗になりました！！</p>
<p><img src="/images/completed.jpg" alt="全部直した" /></p>
<h1>todo</h1>
<ul class="task-list">
<li><input type="checkbox" disabled="" />
画像入れる</li>
<li><input type="checkbox" disabled="" />
動画いれる</li>
</ul>
]]></summary>
</entry>
<entry>
    <title>Blender docs -- data block</title>
    <link href="https://cj-bc.github.io/blog/posts/2020-08-19-blender-data-blocks.html" />
    <id>https://cj-bc.github.io/blog/posts/2020-08-19-blender-data-blocks.html</id>
    <published>2020-08-19T00:00:00Z</published>
    <updated>2020-08-19T00:00:00Z</updated>
    <summary type="html"><![CDATA[<div class="info">
  <ul>
    <li>Posted on August 19, 2020</li>
    <li>Updated on August 31, 2020</li>
  </ul>
    
</div>
<div class="info">
  
  Tags: <a title="All pages tagged &#39;blender&#39;." href="/tags/blender.html">blender</a>, <a title="All pages tagged &#39;document&#39;." href="/tags/document.html">document</a>, <a title="All pages tagged &#39;translation&#39;." href="/tags/translation.html">translation</a>, <a title="All pages tagged &#39;wip&#39;." href="/tags/wip.html">wip</a>
  
</div>

<p>公式: <a href="https://docs.blender.org/manual/ja/2.80/files/data_blocks.html" class="uri">https://docs.blender.org/manual/ja/2.80/files/data_blocks.html</a></p>
<h1>Data blocks</h1>
<p>いかなるBlenderプロジェクトの基本単位は<code>data-block</code>です。<code>data-block</code>の例としては: meshes, objects, materials, textures, node trees, scenes, texts, brushes, そして workspace</p>
<p><code>data-block</code>は、とても異なる種類のデータの全体的な抽象であり、共通の基本的な<code>feature</code>であるプロパティと<code>behaviors</code>に重心を置いています。</p>
<p>いくつかの共通した特徴は:</p>
<ul>
<li><code>blend-file</code>の<code>primary contents</code>です。</li>
<li>再利用やインスタンス化のために、違いを参照することができます。(Child/parent, object/object-data, materials/images, in modifiers or constraints too...)</li>
<li>それぞれの名前は、<code>blend-file</code>内で同じタイプの中で<code>unique</code>です。</li>
<li>追加、削除、編集、複製が可能です。</li>
<li>ファイル間で<code>link</code>することができます。(限られた種類の<code>data-blocks</code>のみです)</li>
<li>それぞれ独自のアニメーションデータを持つことができます。</li>
<li>それぞれ<a href="https://docs.blender.org/manual/ja/2.80/files/data_blocks.html#files-data-blocks-custom-properties">Custom properties</a>を持つことができます。</li>
</ul>
<p>ユーザーは<code>typically</code>高レベルの<code>data type</code>を扱うことになります(<code>obects</code>, <code>meshes</code>など)。 複雑なプロジェクトを扱う場合、特に<code>inter-linking blend-files</code>の場合、<code>data-block</code>の管理はより重要になります。 それ用の主なエディターは<a href="https://docs.blender.org/manual/ja/2.80/editors/outliner.html">Outliner</a>です</p>
<p>Blender内の全てのデータが<code>data-block</code>なわけではありません。例えば、<code>bones</code>, <code>sequence strips</code>や<code>vertex groups</code>は違っており、 それぞれ<code>armature</code>、<code>scene</code>、<code>mesh types</code>に付属(<code>belong to</code>)しています。</p>
<h1>Life Time</h1>
<p>全ての<code>data-block</code>は<code>usage counted</code>(<code>reference count</code>)を持っており、一つ以上である場合は、UIの中で<code>data-block</code>の名前の右側に<code>current user</code>の数が表示されます。</p>
<p>Blenderは、使用されていないデータは最終的に削除されるという<code>general rule</code>に従っています。</p>
<p>作業中にたくさんのデータを追加・削除することは一般的なため、全ての<code>data-block</code>を一つ一つ手動で管理する必要がないのは利点です。</p>
<p>これは、<code>blend-file</code>を書き込む際に、<code>zero user</code>な<code>data-block</code>をスキップする仕組みになっています。</p>
<h1>Protected</h1>
<p><code>zero user</code>な<code>data-block</code>は保存されないため、時にはユーザーのことを考えずにデータの保存を強制させたい時があるでしょう。</p>
<p>もし、<code>blend-file</code>を<code>library</code>として使っていたり、他のファイルから<code>link</code>したりされたりする目的で使っていた場合、 突然削除されないように気をつける必要があります。</p>
<p><code>data-block</code>を<code>protect</code>するためには、その<code>data-block</code>の名前の横にある盾のボタンを使用します。 そうすると、その<code>data-block</code>はblenderによって自動的に削除されることは無くなりますが、必要ならば手動で削除することができます。</p>
<h1>Sharing</h1>
<p><code>data-block</code>は他の<code>data-block</code>間でも共有できます。</p>
<p>よくデータの共有が行われる例:</p>
<ul>
<li><code>materials</code>間で<code>textures</code>を共有する</li>
<li><code>objects</code>(<code>instances</code>)間で<code>meshes</code>を共有する</li>
<li><code>objects</code>間で<code>animated actions</code>を共有する。例えば、全てのライトが同時に<code>dim</code>するようにします。</li>
</ul>
<p><code>data-block</code>をファイル間でも共有できます、詳しくは:</p>
<ul>
<li><a href="https://docs.blender.org/manual/ja/2.80/files/linked_libraries.html">linked libraries</a></li>
</ul>
<h1>Making Single User</h1>
<p><code>data-block</code>が複数のユーザーによって共有されている時、あるユーザーのためにコピーを作成することができます。 そうするには、名前の右にある<code>user-count</code>ボタンを押してください。そうすることにより、その<code>data-block</code>を複製してその用途のみに<code>assign</code>します。</p>
<h2>注釈</h2>
<p><code>Objects</code>は<code>single-user</code>になるためにより発展的な<code>actions</code>を持っています。<a href="https://docs.blender.org/manual/ja/2.80/scene_layout/object/editing/duplication.html">彼らのドキュメント</a>を参照してください。</p>
<h1>Removing Data-Blocks</h1>
]]></summary>
</entry>
<entry>
    <title>blenderのSmooth</title>
    <link href="https://cj-bc.github.io/blog/posts/2020-08-17-blender-auto-smooth.html" />
    <id>https://cj-bc.github.io/blog/posts/2020-08-17-blender-auto-smooth.html</id>
    <published>2020-08-17T00:00:00Z</published>
    <updated>2020-08-17T00:00:00Z</updated>
    <summary type="html"><![CDATA[<div class="info">
  <ul>
    <li>Posted on August 17, 2020</li>
    <li>Updated on August 31, 2020</li>
  </ul>
    
</div>
<div class="info">
  
  Tags: <a title="All pages tagged &#39;blender&#39;." href="/tags/blender.html">blender</a>, <a title="All pages tagged &#39;memo&#39;." href="/tags/memo.html">memo</a>, <a title="All pages tagged &#39;tips&#39;." href="/tags/tips.html">tips</a>
  
</div>

<p>Blenderには、面と面を補完して滑らかに表示する<code>shade smooth</code>という機能があります。 しかし、何も考えずに使おうとすると思わぬところが補完され、予期せぬ結果になることが多々起こります。</p>
<p><img src="https://pbs.twimg.com/media/Efm72cmU8AI3H5K?format=jpg&amp;name=medium" alt="shade flatの結果" /></p>
<p><img src="https://pbs.twimg.com/media/Efm74u6UcAEU2nM?format=jpg&amp;name=medium" alt="shade smoothの結果" /></p>
<h1>Auto Smoothを使おう</h1>
<p>Auto Smoothは、面の角度によって<code>shade smooth</code>と<code>shade flat</code>を使い分けてくれる機能です。 <a href="https://blender-cg.net/smooth-flat/">blender-cg.netさんの記事</a>で知りました。</p>
<p><a href="https://docs.blender.org/manual/ja/2.80/modeling/meshes/structure.html#auto-smooth">公式リファレンス(英語)</a></p>
<p>これを使うと、かなり快適に使うことができます！わーい！！</p>
<p><img src="https://pbs.twimg.com/media/Efm8n4uUYAALg-g?format=png&amp;name=small" alt="auto smoothの場所" /></p>
<p><img src="https://pbs.twimg.com/media/Efm8pyjU8AAU01a?format=jpg&amp;name=medium" alt="auto smoothを適用してみた結果" /></p>
]]></summary>
</entry>
<entry>
    <title>blenderマテリアル のblend modeについて</title>
    <link href="https://cj-bc.github.io/blog/posts/2020-08-16-blender-material-blend-mode.html" />
    <id>https://cj-bc.github.io/blog/posts/2020-08-16-blender-material-blend-mode.html</id>
    <published>2020-08-16T00:00:00Z</published>
    <updated>2020-08-16T00:00:00Z</updated>
    <summary type="html"><![CDATA[<div class="info">
  <ul>
    <li>Posted on August 16, 2020</li>
    <li>Updated on August 31, 2020</li>
  </ul>
    
</div>
<div class="info">
  
  Tags: <a title="All pages tagged &#39;blender&#39;." href="/tags/blender.html">blender</a>, <a title="All pages tagged &#39;memo&#39;." href="/tags/memo.html">memo</a>, <a title="All pages tagged &#39;material&#39;." href="/tags/material.html">material</a>, <a title="All pages tagged &#39;3dcg&#39;." href="/tags/3dcg.html">3dcg</a>
  
</div>

<ul>
<li>Blenderのバージョン: 2.80</li>
<li>公式のリファレンス: <a href="https://docs.blender.org/manual/en/2.80/render/eevee/materials/settings.html">blender manual -- materials</a></li>
</ul>
<p>Blend modeは、表面の色の計算が終わった後にどのようにカラーバッファに影響するかを決めます。</p>
<h1 class="small-caption">Opaque</h1>
<p>アルファチャンネル(=透明度)を完全に無視し、色を上書きします。これが一番早いモードです。</p>
<h1 class="small-caption">Additive</h1>
<p>直前の色に表面の色を加算します。アルファ値は、 <em>neutral color</em> の黒 (0.0, 0.0, 0.0, 0.0) と表面の色を混ぜるために使われます。</p>
<h1 class="small-caption">Multiplicative</h1>
<p>直前の色と表面の色を乗算します。アルファ値は、 <em>neutral color</em> の白 (1.0, 1.0, 1.0) と表面の色を混ぜるために使われます。</p>
<h1 class="small-caption">Alpha Clip</h1>
<p>アルファ値がclip閾値を上回った場合のみ、直前の色は表面の色で上書きされます。</p>
<h1 class="small-caption">Alpha Hashed</h1>
<p>アルファ値がランダムで決められたclip閾値を上回った場合のみ、直前の色は表面の色で上書きされます。 この統計学的なアプローチはノイズが多いですが、ソートの問題なしにアルファ値のブレンドを概算できます。レンダー設定でサンプル数を増やすと、最終的なノイズを減らすことができます。</p>
<h1 class="small-caption">Alpha Blending</h1>
<p>アルファ値のブレンドを使い、直前の色の上に表面の色をオーバーレイします。</p>
]]></summary>
</entry>

</feed>
