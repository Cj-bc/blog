<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
    <title>CLI! CLI! CLI!</title>
    <link href="https://cj-bc.github.io/blog/feeds/atom/tag/pandoc.xml" rel="self" />
    <link href="https://cj-bc.github.io/blog" />
    <id>https://cj-bc.github.io/blog/feeds/atom/tag/pandoc.xml</id>
    <author>
        <name>Cj-bc a.k.a Cj.BC_SD</name>
        <email>cj.bc-sd@outlook.jp</email>
    </author>
    <updated>2020-11-16T00:00:00Z</updated>
    <entry>
    <title>pandocのorderedListのAttributeと見た目について</title>
    <link href="https://cj-bc.github.io/blog/posts/2020-11-16-pandoc-orderedlist-attr-view.html" />
    <id>https://cj-bc.github.io/blog/posts/2020-11-16-pandoc-orderedlist-attr-view.html</id>
    <published>2020-11-16T00:00:00Z</published>
    <updated>2020-11-16T00:00:00Z</updated>
    <summary type="html"><![CDATA[<div class="info">
  <ul>
    <li>Posted on November 16, 2020</li>
    <li>Updated on November 17, 2020</li>
  </ul>
    
</div>
<div class="info">
  
  Tags: <a title="All pages tagged &#39;pandoc&#39;." href="/tags/pandoc.html">pandoc</a>, <a title="All pages tagged &#39;haskell&#39;." href="/tags/haskell.html">haskell</a>
  
</div>

<p><a href="https://hackage.haskell.org/package/pandoc-types-1.22/docs/Text-Pandoc-Definition.html#t:Block">公式リファレンス</a> を見てもよくわからないので、markdownに変換して試してみた。</p>
<h1>実際のコード</h1>
<h2>ListNumberStyle</h2>
<p><a href="https://hackage.haskell.org/package/pandoc-types-1.22/docs/Text-Pandoc-Definition.html#t:ListNumberStyle">ListNumberStyle</a>は、 数字表現(1,2,3なのかi,ii,iiiなのかなど)を決めるもの。 わかりやすいように他の内容は一致させています。</p>
<p><code>code haskell [OrderedList (1,DefaultStyle,TwoParens) [[Plain [Str "hoge"]],[Plain [Str "foo"]]] ,OrderedList (1, Example,TwoParens)     [[Plain [Str "hoge"]],[Plain [Str "foo"]]] ,OrderedList (1,Decimal,TwoParens)      [[Plain [Str "hoge"]],[Plain [Str "foo"]]] ,OrderedList (1,LowerRoman,TwoParens)   [[Plain [Str "hoge"]],[Plain [Str "foo"]]] ,OrderedList (1,UpperRoman,TwoParens)   [[Plain [Str "hoge"]],[Plain [Str "foo"]]] ,OrderedList (1,LowerAlpha,TwoParens)   [[Plain [Str "hoge"]],[Plain [Str "foo"]]] ,OrderedList (1,UpperAlpha,TwoParens)   [[Plain [Str "hoge"]],[Plain [Str "foo"]]] ]</code></p>
<p>これをvimで開き、<code>%!pandoc -f native -t markdown</code>で試した。これ便利なのでおすすめ。 その結果が以下:</p>
<p>``` code markdown result (1) hoge (2) foo</p>
<p>(1) hoge (2) foo</p>
<p>(1) hoge (2) foo</p>
<p>(i) hoge (ii) foo</p>
<p>(I) hoge (II) foo</p>
<p>(a) hoge (b) foo</p>
<p>(A) hoge (B) foo</p>
<pre><code>
`Default`/`Example`はどうやらDecimalになってしまう模様。あとは大体名前の通りになった。

## ListNumberDelim

[ListNumberDelim](https://hackage.haskell.org/package/pandoc-types-1.22/docs/Text-Pandoc-Definition.html#t:ListNumberDelim)
は、数字の後につくやつ。  
コードは基本先ほどと同じものを使用




``` code haskell
[OrderedList (1,DefaultStyle,DefaultDelim) [[Plain [Str &quot;hoge&quot;]],[Plain [Str &quot;foo&quot;]]]
,OrderedList (1,DefaultStyle,Period)       [[Plain [Str &quot;hoge&quot;]],[Plain [Str &quot;foo&quot;]]]
,OrderedList (1,DefaultStyle,OneParen)     [[Plain [Str &quot;hoge&quot;]],[Plain [Str &quot;foo&quot;]]]
,OrderedList (1,DefaultStyle,TwoParens)    [[Plain [Str &quot;hoge&quot;]],[Plain [Str &quot;foo&quot;]]]
]</code></pre>
<p>結果が以下。</p>
<p>``` code markdown result 1. hoge 2. foo</p>
<ol>
<li>hoge</li>
<li>foo</li>
</ol>
<p>1) hoge 2) foo</p>
<p>(1) hoge (2) foo ```</p>
]]></summary>
</entry>
<entry>
    <title>vim-pandoc-syntaxでurlを非表示にしたい</title>
    <link href="https://cj-bc.github.io/blog/posts/2020-11-13-pandoc-vim-conceal-url-by-default.html" />
    <id>https://cj-bc.github.io/blog/posts/2020-11-13-pandoc-vim-conceal-url-by-default.html</id>
    <published>2020-11-13T00:00:00Z</published>
    <updated>2020-11-13T00:00:00Z</updated>
    <summary type="html"><![CDATA[<div class="info">
  <ul>
    <li>Posted on November 13, 2020</li>
    <li>Updated on November 13, 2020</li>
  </ul>
    
</div>
<div class="info">
  
  Tags: <a title="All pages tagged &#39;vim&#39;." href="/tags/vim.html">vim</a>, <a title="All pages tagged &#39;pandoc&#39;." href="/tags/pandoc.html">pandoc</a>
  
</div>

<h1>vimwikiのハイライトが欲しい</h1>
<h1>markdown/vimwiki/pandocのsyntaxハイライト</h1>
<p>vimwikiのsyntaxでは、以下のようなリンクは</p>
<div class="sourceCode" id="cb1"><pre class="sourceCode markdown"><code class="sourceCode markdown"><span id="cb1-1"><a href="#cb1-1" aria-hidden="true"></a><span class="co">[</span><span class="ot">説明</span><span class="co">](url)</span></span></code></pre></div>
<p>このように表示されます(<code>+conceal</code>オプションが有効な場合)</p>
<p><a href="url">説明</a></p>
<p>これがあると、長いURLを持つドキュメントでの可読性がグンと上がります</p>
<p>例えば、<a href="https://cj-bc.github.io/blog/posts/2020-08-19-blender-data-blocks.html">blender data blocks</a>の記事は<code>markdown</code>/<code>vimwiki</code>/<code>pandoc</code>それぞれのsyntaxで 以下のように見えます。</p>
<p><img src="/images/difference_md-vimwiki-pandoc.png" alt="markdown, vimwiki, pandocのハイライトの違い" /></p>
<p>さて、これを普段使いの<code>pandoc</code>syntaxでも使いたいというのが今回の希望です。</p>
<h1>結論: デフォルトの変数を設定しろ</h1>
<p>もうこれが答えでした！<br />
ドキュメントよもうね！！！！</p>
<pre class="vim"><code>let g:pandoc#syntax#conceal#urls = 1</code></pre>
<p>これだけでURLの<code>conceal</code>が有効になり、vimwikiと同じような見た目になります</p>
<p><img src="/images/pandoc-with-conceal.png" alt="設定後のpandoc" /></p>
<h1>おまけ</h1>
<p>ちなみに該当のコードは<a href="https://github.com/vim-pandoc/vim-pandoc-syntax/blob/2521e2e9b99a3550e1a20f24e09fa46679cbbbc7/syntax/pandoc.vim#L300-L304">300-304行目</a>にありました。</p>
<pre class="vim"><code>if g:pandoc#syntax#conceal#urls == 1
    syn region pandocReferenceURL matchgroup=pandocOperator start=/\]\@1&lt;=(/ end=/)/ keepend conceal
else
    syn region pandocReferenceURL matchgroup=pandocOperator start=/\]\@1&lt;=(/ end=/)/ keepend
endif</code></pre>
]]></summary>
</entry>

</feed>
