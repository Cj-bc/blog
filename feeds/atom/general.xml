<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
    <title>CLI! CLI! CLI!</title>
    <link href="https://cj-bc.github.io/blog/feeds/atom/general.xml" rel="self" />
    <link href="https://cj-bc.github.io/blog" />
    <id>https://cj-bc.github.io/blog/feeds/atom/general.xml</id>
    <author>
        <name>Cj-bc a.k.a Cj.BC_SD</name>
        <email>cj.bc-sd@outlook.jp</email>
    </author>
    <updated>2021-01-31T00:00:00Z</updated>
    <entry>
    <title>org fileでの投稿のテストです</title>
    <link href="https://cj-bc.github.io/blog/posts/2021-01-31-org-file-test.html" />
    <id>https://cj-bc.github.io/blog/posts/2021-01-31-org-file-test.html</id>
    <published>2021-01-31T00:00:00Z</published>
    <updated>2021-01-31T00:00:00Z</updated>
    <summary type="html"><![CDATA[<div class="ui center aligned icon header">
  <h1>org fileでの投稿のテストです</h1>
  <div class="ui list">
    <div class="item">Posted on January 31, 2021</div>
    <div class="item">
      <i class="history icon"></i>
      Updated on January 31, 2021
    </div>
  </div>
    
</div>
<div class="info">
  
  <a title="All pages tagged &#39;org&#39;." href="/tags/org.html" class="ui tag label">org</a>
  
</div>

<h1 id="org fileでの投稿のテストです">org fileでの投稿のテストです</h1>
<p>org fileには別の~Compiler~が必要かな？</p>
]]></summary>
</entry>
<entry>
    <title>AEのMarker</title>
    <link href="https://cj-bc.github.io/blog/posts/2021-01-19-after-effect-markers.html" />
    <id>https://cj-bc.github.io/blog/posts/2021-01-19-after-effect-markers.html</id>
    <published>2021-01-19T00:00:00Z</published>
    <updated>2021-01-19T00:00:00Z</updated>
    <summary type="html"><![CDATA[<div class="ui center aligned icon header">
  <h1>AEのMarker</h1>
  <div class="ui list">
    <div class="item">Posted on January 19, 2021</div>
    <div class="item">
      <i class="history icon"></i>
      Updated on January 19, 2021
    </div>
  </div>
    
</div>
<div class="info">
  
  <a title="All pages tagged &#39;after effect&#39;." href="/tags/after%20effect.html" class="ui tag label">after effect</a>
  
</div>

<ul>
<li><a href="https://helpx.adobe.com/jp/after-effects/user-guide.html/jp/after-effects/using/layer-markers-composition-markers.ug.html">公式URL</a></li>
</ul>
<h1 id="Markerとは">Markerとは</h1>
<p><strong>keyframeとは別</strong> である。 <em>レイヤーマーカー</em> と <em>コンポジションマーカー</em> の二種類がある。 今回コンポジションマーカー使わないので、使うときにでも追記する</p>
<h2 id="レイヤーマーカー">レイヤーマーカー</h2>
<p>キーフレームに似ているが、Expressionからその値を参照することができる。</p>
<h3 id="作り方">作り方</h3>
<ol>
<li>レイヤーを選択</li>
<li>マーカーを置きたいframeに移動する</li>
<li><code>レイヤー/マーカー/マーカーを追加</code>もしくは <em>キーパッドの</em> <code>*</code></li>
</ol>
]]></summary>
</entry>
<entry>
    <title>fzf.vimでカレントディレクトリ以外のGitファイルを検索</title>
    <link href="https://cj-bc.github.io/blog/posts/2021-01-13-GFiles-more-careful-with-fzf.html" />
    <id>https://cj-bc.github.io/blog/posts/2021-01-13-GFiles-more-careful-with-fzf.html</id>
    <published>2021-01-14T00:00:00Z</published>
    <updated>2021-01-14T00:00:00Z</updated>
    <summary type="html"><![CDATA[<div class="ui center aligned icon header">
  <h1>fzf.vimでカレントディレクトリ以外のGitファイルを検索</h1>
  <div class="ui list">
    <div class="item">Posted on January 14, 2021</div>
    <div class="item">
      <i class="history icon"></i>
      Updated on January 14, 2021
    </div>
  </div>
    
</div>
<div class="info">
  
  <a title="All pages tagged &#39;fzf.vim&#39;." href="/tags/fzf.vim.html" class="ui tag label">fzf.vim</a><a title="All pages tagged &#39;fzf&#39;." href="/tags/fzf.html" class="ui tag label">fzf</a><a title="All pages tagged &#39;vim&#39;." href="/tags/vim.html" class="ui tag label">vim</a>
  
</div>

<h1 id="GFilesは便利"><code>GFiles</code>は便利</h1>
<p><code>GFiles</code>は、カレントディレクトリにgitレポジトリがあると仮定して、そのレポジトリに認識されるファイル(=一度はコミットされているファイル) の一覧を作り出します。</p>
<p>しかし、場合によっては「カレントディレクトリ以外のgitレポジトリにあるファイルを参照したい」ことがあると思います。</p>
<p>例えば、私は普段プロジェクトに取り組んでいる最中にブログを書いたりするのですが、まさにその時などです。 カレントディレクトリはプロジェクトディレクトリのままで、ブログのレポジトリに対して<code>GFiles</code>を使いたいのです。</p>
<p>これは公式の方法が(多分)ないので直接書き換えます。</p>
<p><code>~/.vim/bundle/fzf.vim/autoload/fzf/vim.vim</code>の<code>s:get_git_root()</code>がgitレポジトリを見つけるためのコードなので、ここにfugitiveが使う<code>b:git_dir</code>変数の中身を適用するように編集します。</p>
<div class="ui segment">
<div class="ui top right attached label">
vim
</div>
<pre class="vim SourceCode"><code>function! s:get_git_root()
  let root = split(system(&#39;git rev-parse --show-toplevel&#39;), &#39;\n&#39;)[0]
  return v:shell_error ? &#39;&#39; : root
endfunction</code></pre>
</div>
<p>こうだったのが</p>
<div class="ui segment">
<div class="ui top right attached label">
vim
</div>
<pre class="vim SourceCode"><code>function! s:get_git_root()
  let root = split(system(&#39;git rev-parse --show-toplevel&#39;), &#39;\n&#39;)[0]
  let root_ = root ? root : b:git_dir
  return v:shell_error ? &#39;&#39; : root_
endfunction</code></pre>
</div>
<p>こうすることにより、<code>git_dir</code>も有効に検索されるようになりました。</p>
]]></summary>
</entry>
<entry>
    <title>After Effectショートカットキーチートシート(個人用)</title>
    <link href="https://cj-bc.github.io/blog/posts/2021-01-13-after-effect-cheat-sheet.html" />
    <id>https://cj-bc.github.io/blog/posts/2021-01-13-after-effect-cheat-sheet.html</id>
    <published>2021-01-13T00:00:00Z</published>
    <updated>2021-01-13T00:00:00Z</updated>
    <summary type="html"><![CDATA[<div class="ui center aligned icon header">
  <h1>After Effectショートカットキーチートシート(個人用)</h1>
  <div class="ui list">
    <div class="item">Posted on January 13, 2021</div>
    <div class="item">
      <i class="history icon"></i>
      Updated on January 14, 2021
    </div>
  </div>
    
</div>
<div class="info">
  
  <a title="All pages tagged &#39;after effect&#39;." href="/tags/after%20effect.html" class="ui tag label">after effect</a><a title="All pages tagged &#39;cheat sheet&#39;." href="/tags/cheat%20sheet.html" class="ui tag label">cheat sheet</a>
  
</div>

<p>個人用のチートシート</p>
<p>やりたいこと ショートカットキー ----------------- ------------------- Layerをカットする Ctrl+Shift+D</p>
]]></summary>
</entry>
<entry>
    <title>Expressionを使ったアニメーションのメモ</title>
    <link href="https://cj-bc.github.io/blog/posts/2021-01-13-after-effect-animation-with-expressions.html" />
    <id>https://cj-bc.github.io/blog/posts/2021-01-13-after-effect-animation-with-expressions.html</id>
    <published>2021-01-13T00:00:00Z</published>
    <updated>2021-01-13T00:00:00Z</updated>
    <summary type="html"><![CDATA[<div class="ui center aligned icon header">
  <h1>Expressionを使ったアニメーションのメモ</h1>
  <div class="ui list">
    <div class="item">Posted on January 13, 2021</div>
    <div class="item">
      <i class="history icon"></i>
      Updated on January 19, 2021
    </div>
  </div>
    
</div>
<div class="info">
  
  <a title="All pages tagged &#39;after effect&#39;." href="/tags/after%20effect.html" class="ui tag label">after effect</a>
  
</div>

<h1 id="Expression制御のEffectは必ずリネームする">Expression制御のEffectは必ずリネームする</h1>
<p>同じ種類のExpression制御Effectを一度しか使わないなら問題にはならない気がしますが、 後々見やすいのでリネームをした方が良いです。<br />
そして、<strong>できる限り早く</strong>リネームするようにしてください。 複数の同じエフェクトを作成・Expressionから参照した後にリネームした場合、 <strong>Expression内の同名の部分が全て新しい名前に置き換わります</strong>。<br />
例えば、</p>
<h2 id="リネームの仕方">リネームの仕方</h2>
<p><a href="https://creativecow.net/forums/thread/rename-expression-controlsae-2/">参考にしたもの</a></p>
<p>例えばスライダー制御のEffectをリネームする場合、<code>エフェクト→スライダー制御</code>を選択してEnterを押します。 すると普段通りにリネームできます。~~私は気付かなかった...~~</p>
<h1 id="Expressionのコピペ">Expressionのコピペ</h1>
<p>作成したExpressionを含むプロパティを選択しC-cで普段通りコピー。 コピー先のレイヤーを選択してC-vするとそのままペーストされる。</p>
<h1 id="一定の時間から色などを変化させる">一定の時間から色などを変化させる</h1>
<p>固定値を使わなくても<code>Marker</code>を使えばできる。</p>
<ul>
<li><a href="https://helpx.adobe.com/jp/after-effects/user-guide.html/jp/after-effects/using/layer-markers-composition-markers.ug.html">公式URL</a></li>
<li><a href="https://cj-bc.github.com/blog/posts/2021-01-19-after-effect-markers.html">Markerについて</a></li>
</ul>
<h2 id="レイヤーマーカーを参照する">レイヤーマーカーを参照する</h2>
<p>https://helpx.adobe.com/jp/after-effects/user-guide.html/jp/after-effects/using/expression-language-reference.ug.html</p>
<div class="ui segment">
<div class="ui top right attached label">
javascript
</div>
<div class="sourceCode" id="cb1"><pre class="sourceCode javascript SourceCode"><code class="sourceCode javascript"><span id="cb1-1"><a href="#cb1-1" aria-hidden="true"></a>thisLayer<span class="op">.</span><span class="at">marker</span><span class="op">.</span><span class="fu">key</span>(n<span class="op">:</span> int)    <span class="co">// n番目のマーカーを参照する</span></span>
<span id="cb1-2"><a href="#cb1-2" aria-hidden="true"></a>thisLayer<span class="op">.</span><span class="at">marker</span><span class="op">.</span><span class="fu">key</span>(name<span class="op">:</span> str) <span class="co">// nameという名前のマーカーを参照する</span></span>
<span id="cb1-3"><a href="#cb1-3" aria-hidden="true"></a>thisLayer<span class="op">.</span><span class="at">marker</span><span class="op">.</span><span class="fu">nearestKey</span>(t<span class="op">:</span> float) <span class="co">// tという時間に一番近いマーカーを参照する</span></span></code></pre></div>
</div>
]]></summary>
</entry>
<entry>
    <title>VRM_IMPORTER_for_Blender \#23 作業メモ</title>
    <link href="https://cj-bc.github.io/blog/posts/2021-01-11-blender-python-memo.html" />
    <id>https://cj-bc.github.io/blog/posts/2021-01-11-blender-python-memo.html</id>
    <published>2021-01-11T00:00:00Z</published>
    <updated>2021-01-11T00:00:00Z</updated>
    <summary type="html"><![CDATA[<div class="ui center aligned icon header">
  <h1>VRM_IMPORTER_for_Blender \#23 作業メモ</h1>
  <div class="ui list">
    <div class="item">Posted on January 11, 2021</div>
    <div class="item">
      <i class="history icon"></i>
      Updated on January 15, 2021
    </div>
  </div>
    
</div>
<div class="info">
  
  <a title="All pages tagged &#39;blender&#39;." href="/tags/blender.html" class="ui tag label">blender</a><a title="All pages tagged &#39;python&#39;." href="/tags/python.html" class="ui tag label">python</a>
  
</div>

<h1 id="追加されたシェーダーを探す">追加されたシェーダーを探す</h1>
<h2 id="場所の特定">場所の特定</h2>
<p>そもそもファイルがどこに追加されているのかを確かめる必要がある。 そこで、<code>__init__.py</code>を参照する。(どうでもいいけど中身のある<code>__init__.py</code>は初めて見た)<br />
Blenderは、Addonが追加されるとクラスなどを登録するために<code>register()</code>という関数を探して実行する。 以下がこのAddonの<code>register()</code>関数。 (<a href="https://github.com/saturday06/VRM_IMPORTER_for_Blender/blob/a14835bfbc573a1d8f2be2a74ed198da46a573e4/__init__.py#L277-L285">githubで確認する</a>)</p>
<div class="ui segment">
<div class="ui top right attached label">
python
</div>
<div class="sourceCode" id="cb1"><pre class="sourceCode python SourceCode"><code class="sourceCode python"><span id="cb1-1"><a href="#cb1-1" aria-hidden="true"></a><span class="co"># アドオン有効化時の処理</span></span>
<span id="cb1-2"><a href="#cb1-2" aria-hidden="true"></a><span class="kw">def</span> register():</span>
<span id="cb1-3"><a href="#cb1-3" aria-hidden="true"></a>    <span class="cf">for</span> cls <span class="kw">in</span> classes:</span>
<span id="cb1-4"><a href="#cb1-4" aria-hidden="true"></a>        bpy.utils.register_class(cls)</span>
<span id="cb1-5"><a href="#cb1-5" aria-hidden="true"></a>    bpy.types.TOPBAR_MT_file_import.append(menu_import)</span>
<span id="cb1-6"><a href="#cb1-6" aria-hidden="true"></a>    bpy.types.TOPBAR_MT_file_export.append(menu_export)</span>
<span id="cb1-7"><a href="#cb1-7" aria-hidden="true"></a>    bpy.types.VIEW3D_MT_armature_add.append(add_armature)</span>
<span id="cb1-8"><a href="#cb1-8" aria-hidden="true"></a>    <span class="co"># bpy.types.VIEW3D_MT_mesh_add.append(make_mesh)</span></span>
<span id="cb1-9"><a href="#cb1-9" aria-hidden="true"></a>    bpy.app.handlers.load_post.append(add_shaders)</span></code></pre></div>
</div>
<p>明らかに<code>bpy.app.handlers.load_post.append(add_shaders)</code>が怪しい。というか、<code>add_shaders</code>という わかりやすい名前があるので間違い無くここで追加している。 ということで<code>add_shaders</code>を見てみると (<a href="https://github.com/saturday06/VRM_IMPORTER_for_Blender/blob/a14835bfbc573a1d8f2be2a74ed198da46a573e4/__init__.py#L245-L253">githubで確認する</a>)</p>
<div class="ui segment">
<div class="ui top right attached label">
python
</div>
<div class="sourceCode" id="cb2"><pre class="sourceCode python SourceCode"><code class="sourceCode python"><span id="cb2-1"><a href="#cb2-1" aria-hidden="true"></a><span class="at">@persistent</span></span>
<span id="cb2-2"><a href="#cb2-2" aria-hidden="true"></a><span class="kw">def</span> add_shaders(<span class="va">self</span>):</span>
<span id="cb2-3"><a href="#cb2-3" aria-hidden="true"></a>    filedir <span class="op">=</span> os.path.join(</span>
<span id="cb2-4"><a href="#cb2-4" aria-hidden="true"></a>        os.path.dirname(<span class="va">__file__</span>), <span class="st">&quot;resources&quot;</span>, <span class="st">&quot;material_node_groups.blend&quot;</span></span>
<span id="cb2-5"><a href="#cb2-5" aria-hidden="true"></a>    )</span>
<span id="cb2-6"><a href="#cb2-6" aria-hidden="true"></a>    <span class="cf">with</span> bpy.data.libraries.load(filedir, link<span class="op">=</span><span class="va">False</span>) <span class="im">as</span> (data_from, data_to):</span>
<span id="cb2-7"><a href="#cb2-7" aria-hidden="true"></a>        <span class="cf">for</span> nt <span class="kw">in</span> data_from.node_groups:</span>
<span id="cb2-8"><a href="#cb2-8" aria-hidden="true"></a>            <span class="cf">if</span> nt <span class="kw">not</span> <span class="kw">in</span> bpy.data.node_groups:</span>
<span id="cb2-9"><a href="#cb2-9" aria-hidden="true"></a>                data_to.node_groups.append(nt)</span></code></pre></div>
</div>
<h2 id="実際にshaderを追加している部分">実際にshaderを追加している部分</h2>
<p>このコードである。そして、読めば字の如くだが、レポジトリにある<code>resources/material_node_groups.blend</code> にある<code>node_groups</code>の中でBlenderに存在していないものがあれば <code>data_to.node_groups.append()</code>して追加している。<br />
結論から言うと<a href="https://docs.blender.org/api/current/bpy.types.BlendData.html?highlight=node_groups#bpy.types.BlendData.node_groups"><code>node_groups</code></a>は nodeで表現されるもの(オブジェクト？)、つまり<code>Shading</code>/<code>Textures</code>/<code>Compositin</code>に関わるものの集合である。 (<a href="https://docs.blender.org/api/current/bpy.types.NodeTree.html#bpy.types.NodeTree">公式doc</a>)<br />
type()によると、<code>bpy.data</code>は<code>bpy.types.BlendData</code>であるので、<code>node_groups</code>は <a href="https://docs.blender.org/api/current/bpy.types.BlendData.html?highlight=node_groups#bpy.types.BlendData.node_groups"><code>bpy.types.BlendData.node_groups</code></a> である。 ここで、なんとなく<code>bpy.data</code>を見てみると<code>bpy.data.node_groups</code>に追加されてることがわかる。</p>
<details>
<summary>`bpy.data.node_groups`までたどり着く道のりメモ(でもよくわからなくて落書き)</summary>
`data_to`は[`bpy.data.libraries.load`](https://docs.blender.org/api/current/bpy.types.BlendDataLibraries.html#bpy.types.BlendDataLibraries.load)から返されている。
`bpy.data`が[`BlendData`](https://docs.blender.org/api/current/bpy.types.BlendData.html)のインスタンスであることから
`bpy.data.libraries.load`は[`BlendDataLibraries.load`](https://docs.blender.org/api/current/bpy.types.BlendDataLibraries.html#bpy.types.BlendDataLibraries.load)である。  

...で、なんとなく`bpy.data`を見る、に戻る
</details>
<p><code>node_groups</code>の中で入力を受け付けてるものなら<code>.inputs</code>にある。 今回でいうと、<code>MToon</code>マテリアルにある<code>NomalmapTexture</code>というtypoを直したいので、 <code>bpy.data.node_groups['MToon_unversioned'].input['NomalmapTexture']</code>を参照する</p>
<h1 id="今行き詰まっている問題">今行き詰まっている問題</h1>
<h2 id="bpypropcollectionに追加できない">bpy<em>prop</em>collectionに追加できない</h2>
<p>これをtypoが直った<code>bpy.data.node_groups['MToon_unversioned'].input['NormalmapTexture']</code>に変えたいのだけど、 どうやら<code>input['NomalmapTexture']</code>の型である<code>bpy_prop_collection</code>がC実装なようで、普段のpythonのようにはいかない。 具体的にいうと</p>
<div class="ui segment">
<div class="ui top right attached label">
python
</div>
<div class="sourceCode" id="cb3"><pre class="sourceCode python SourceCode"><code class="sourceCode python"><span id="cb3-1"><a href="#cb3-1" aria-hidden="true"></a>bpy.data.node_groups[<span class="st">&#39;MToon_unversioned&#39;</span>].<span class="bu">input</span>[<span class="st">&#39;NormalmapTexture&#39;</span>] <span class="op">=</span> bpy.data.node_groups[<span class="st">&#39;MToon_unversioned&#39;</span>].<span class="bu">input</span>[<span class="st">&#39;NomalmapTexture&#39;</span>]</span></code></pre></div>
</div>
<p>では以下のようにエラーを吐かれてうまくいかない。</p>
<div class="ui segment">
<div class="ui top right attached label">
python-repl
</div>
<pre class="python-repl SourceCode"><code>&gt;&gt;&gt; mtonNode = bpy.data.node_groups[&#39;MToon_unversioned&#39;]
&gt;&gt;&gt; mtoonNode.inputs[&#39;NormalmapTexture&#39;] = mtoonNode.inputs[&#39;NomalmapTexture&#39;]
Traceback (most recent call last):
  File &quot;&lt;console&gt;&quot;, line 1, in &lt;module&gt;
TypeError: bpy_prop_collection[key]: invalid key, must be a string or an int, not str</code></pre>
</div>
<h3 id="試したこと">試したこと</h3>
<p><a href="https://docs.blender.org/api/current/bpy.types.bpy_prop_collection.html?highlight=bpy_prop_collection#bpy.types.bpy_prop_collection"><code>bpy_prop_collection</code></a>のドキュメントと<code>dir(mtoonNode.inputs[0])</code>を読んでみた所、 ドキュメントには書かれていなかったけど<code>move</code>と<code>new</code>があった。</p>
<div class="ui segment">
<div class="ui top right attached label">
python-repl
</div>
<pre class="python-repl SourceCode"><code>&gt;&gt;&gt; dir(mtoonNode.inputs)
[&#39;__bool__&#39;, &#39;__contains__&#39;, &#39;__delattr__&#39;, &#39;__delitem__&#39;, &#39;__doc__&#39;
, &#39;__doc__&#39;, &#39;__getattribute__&#39;, &#39;__getitem__&#39;, &#39;__iter__&#39;, &#39;__len__&#39;
, &#39;__module__&#39;, &#39;__setattr__&#39;, &#39;__setitem__&#39;, &#39;__slots__&#39;, &#39;bl_rna&#39;
, &#39;clear&#39;, &#39;find&#39;, &#39;foreach_get&#39;, &#39;foreach_set&#39;, &#39;get&#39;
, &#39;items&#39;, &#39;keys&#39;, &#39;move&#39;, &#39;new&#39;, &#39;remove&#39;, &#39;rna_type&#39;, &#39;values&#39;]</code></pre>
</div>
<p>それぞれの挙動を試してみたが、どっちもうまく動かず...というか挙動がわからなかった</p>
<h4 id="new()"><code>new()</code></h4>
<details> <summary>Replの結果ですが長いので折りたたみ</summary>
``` python-repl
>>> mtoonNode.inputs
bpy.data...inputs
>>> mtoonNode
bpy.data.node_groups['MToon_unversioned']
>>> mtoonNode.inputs.new
<bpy_func NodeTreeInputs.new()>
>>> mtoonNode.inputs.new()
Traceback (most recent call last):
  File "<console>", line 1, in <module>
TypeError: NodeTreeInputs.new(): required parameter "type" not specified
>>> # mtoonNode.inputs['NomalmapTexture']から値を拝借
>>> mtoonNode.inputs.new('RGBA')
Traceback (most recent call last):
  File "<console>", line 1, in <module>
TypeError: NodeTreeInputs.new(): required parameter "name" not specified
>>> mtoonNode.inputs.new('RGBA', 'NormalmapTexture')
>>> mtoonNode.inputs
bpy.data...inputs
>>> mtoonNode.inputs['NormalmapTexture']
Traceback (most recent call last):
  File "<console>", line 1, in <module>
KeyError: 'bpy_prop_collection[key]: key "NormalmapTexture" not found'
>>> mtoonNode.inputs.items()
[('MainTexture', bpy.data...inputs[0])
, ('MainTextureAlpha', bpy.data...inputs[1])
, ('ShadeTexture', bpy.data...inputs[2])
, ('ReceiveShadow_Texture_alpha', bpy.data...inputs[3])
, ('NomalmapTexture', bpy.data...inputs[4])
, ('ShadingGradeTexture', bpy.data...inputs[5])
, ('Emission_Texture', bpy.data...inputs[6])
, ('SphereAddTexture', bpy.data...inputs[7])
, ('OutlineWidthTexture', bpy.data...inputs[8])
, ('UV_Animation_Mask_Texture', bpy.data...inputs[9])
, ('DiffuseColor', bpy.data...inputs[10])
, ('ShadeColor', bpy.data...inputs[11])
, ('EmissionColor', bpy.data...inputs[12])
, ('OutlineColor', bpy.data...inputs[13])
, ('RimColor', bpy.data...inputs[14])
, ('RimTexture', bpy.data...inputs[15])
, ('RimLightingMix', bpy.data...inputs[16])
, ('RimFresnelPower', bpy.data...inputs[17])
, ('RimLift', bpy.data...inputs[18])
, ('CutoffRate', bpy.data...inputs[19])
, ('BumpScale', bpy.data...inputs[20])
, ('ReceiveShadowRate', bpy.data...inputs[21])
, ('ShadeShift', bpy.data...inputs[22])
, ('ShadeToony', bpy.data...inputs[23])
, ('ShadingGradeRate', bpy.data...inputs[24])
, ('LightColorAttenuation', bpy.data...inputs[25])
, ('IndirectLightIntensity', bpy.data...inputs[26])
, ('OutlineWidth', bpy.data...inputs[27])
, ('OutlineScaleMaxDistance', bpy.data...inputs[28])
, ('OutlineLightingMix', bpy.data...inputs[29])
, ('OutlineWidthMode', bpy.data...inputs[30])
, ('OutlineColorMode', bpy.data...inputs[31])
, ('UV_Scroll_X', bpy.data...inputs[32])
, ('UV_Scroll_Y', bpy.data...inputs[33])
, ('UV_Scroll_Rotation', bpy.data...inputs[34])]
```
</details>
<h4 id="move()">move()</h4>
<details> <summary> Replの結果。長いため折りたたみ。 </summary>
``` python-repl
>>> mtoonNode.inputs.move()
Traceback (most recent call last):
  File "<console>", line 1, in <module>
TypeError: NodeTreeInputs.move(): required parameter "from_index" not specified
>>> mtoonNode.inputs.move(4)
Traceback (most recent call last):
  File "<console>", line 1, in <module>
TypeError: NodeTreeInputs.move(): required parameter "to_index" not specified
>>> mtoonNode.inputs.move(4, 35)
>>> mtoonNode.inputs.items()
[('MainTexture', bpy.data...inputs[0]), ('MainTextureAlpha', bpy.data...inputs[1])
, ('ShadeTexture', bpy.data...inputs[2])
, ('ReceiveShadow_Texture_alpha', bpy.data...inputs[3])
, ('NomalmapTexture', bpy.data...inputs[4])
, ('ShadingGradeTexture', bpy.data...inputs[5])
, ('Emission_Texture', bpy.data...inputs[6])
, ('SphereAddTexture', bpy.data...inputs[7])
, ('OutlineWidthTexture', bpy.data...inputs[8])
, ('UV_Animation_Mask_Texture', bpy.data...inputs[9])
, ('DiffuseColor', bpy.data...inputs[10])
, ('ShadeColor', bpy.data...inputs[11])
, ('EmissionColor', bpy.data...inputs[12])
, ('OutlineColor', bpy.data...inputs[13])
, ('RimColor', bpy.data...inputs[14])
, ('RimTexture', bpy.data...inputs[15])
, ('RimLightingMix', bpy.data...inputs[16])
, ('RimFresnelPower', bpy.data...inputs[17])
, ('RimLift', bpy.data...inputs[18])
, ('CutoffRate', bpy.data...inputs[19])
, ('BumpScale', bpy.data...inputs[20])
, ('ReceiveShadowRate', bpy.data...inputs[21])
, ('ShadeShift', bpy.data...inputs[22])
, ('ShadeToony', bpy.data...inputs[23])
, ('ShadingGradeRate', bpy.data...inputs[24])
, ('LightColorAttenuation', bpy.data...inputs[25])
, ('IndirectLightIntensity', bpy.data...inputs[26])
, ('OutlineWidth', bpy.data...inputs[27])
, ('OutlineScaleMaxDistance', bpy.data...inputs[28])
, ('OutlineLightingMix', bpy.data...inputs[29])
, ('OutlineWidthMode', bpy.data...inputs[30])
, ('OutlineColorMode', bpy.data...inputs[31])
, ('UV_Scroll_X', bpy.data...inputs[32])
, ('UV_Scroll_Y', bpy.data...inputs[33])
, ('UV_Scroll_Rotation', bpy.data...inputs[34])]
>>> mtoonNode.inputs.values()
[bpy.data...inputs[0]
, bpy.data...inputs[1], bpy.data...inputs[2]
, bpy.data...inputs[3], bpy.data...inputs[4]
, bpy.data...inputs[5], bpy.data...inputs[6]
, bpy.data...inputs[7], bpy.data...inputs[8]
, bpy.data...inputs[9], bpy.data...inputs[10]
, bpy.data...inputs[11], bpy.data...inputs[12]
, bpy.data...inputs[13], bpy.data...inputs[14]
, bpy.data...inputs[15], bpy.data...inputs[16]
, bpy.data...inputs[17], bpy.data...inputs[18]
, bpy.data...inputs[19], bpy.data...inputs[20]
, bpy.data...inputs[21], bpy.data...inputs[22]
, bpy.data...inputs[23], bpy.data...inputs[24]
, bpy.data...inputs[25], bpy.data...inputs[26]
, bpy.data...inputs[27], bpy.data...inputs[28]
, bpy.data...inputs[29], bpy.data...inputs[30]
, bpy.data...inputs[31], bpy.data...inputs[32]
, bpy.data...inputs[33], bpy.data...inputs[34]]
>>> bpy.data...inputs[1]
  File "<console>", line 1
    bpy.data...inputs[1]
              ^
SyntaxError: invalid syntax
>>>
```
</details>
]]></summary>
</entry>
<entry>
    <title>ぶいちゅーばーってすごいよね〜って話</title>
    <link href="https://cj-bc.github.io/blog/posts/2021-01-11-streamers-are-sooooooooooo-sugoi.html" />
    <id>https://cj-bc.github.io/blog/posts/2021-01-11-streamers-are-sooooooooooo-sugoi.html</id>
    <published>2021-01-10T00:00:00Z</published>
    <updated>2021-01-10T00:00:00Z</updated>
    <summary type="html"><![CDATA[<div class="ui center aligned icon header">
  <h1>ぶいちゅーばーってすごいよね〜って話</h1>
  <div class="ui list">
    <div class="item">Posted on January 10, 2021</div>
    <div class="item">
      <i class="history icon"></i>
      Updated on January 11, 2021
    </div>
  </div>
    
</div>
<div class="info">
  
  <a title="All pages tagged &#39;blog&#39;." href="/tags/blog.html" class="ui tag label">blog</a>
  
</div>

<p>いやラフに書きたくなっただけで特に意味はない。 勢いに任せているのでまぁ適当だけどまぁ。うん。</p>
<p>尚若干影響を与えてないわけでもないイベントに<a href="http://mamo.sakura.ne.jp/19bright/">19の煌き</a>があるので宣伝をしておきます。</p>
<blockquote class="twitter-tweet">
  <p lang="ja" dir="ltr">19の煌き2、HappyVirtualRoom2、DigitalFairyTaleの告知イラストが完成しました！　素敵なみなさんが大集合！<br>
  イラストはbk様（<a href="https://twitter.com/StampedeM2?ref_src=twsrc%5Etfw">@StampedeM2</a>）<br>サークル参加は12/27まで受付中です！<a href="https://t.co/l0wUV3KDpL">https://t.co/l0wUV3KDpL</a> <a href="https://t.co/y0smq9PZnc">pic.twitter.com/y0smq9PZnc</a></p>&mdash; 『19の煌き』運営 (@61light1) <a href="https://twitter.com/61light1/status/1342047369446055937?ref_src=twsrc%5Etfw">December 24, 2020</a>
</blockquote>
<script async src="https://platform.twitter.com/widgets.js" charset="utf-8"></script>
<p>尚推しの一人である<a href="https://dic.pixiv.net/a/%E6%83%B3%E9%96%93%E3%83%9F%E3%83%AC%E3%82%A4">想間ミレイ</a>ちゃんのサークルも是非に。</p>
<blockquote class="twitter-tweet" data-conversation="none"><p lang="ja" dir="ltr">ｶﾞﾝﾊﾞﾘﾏｼﾀ <a href="https://t.co/shZvFIFMaY">pic.twitter.com/shZvFIFMaY</a></p>&mdash; 想間ミレイ@ゼロから始めるVTuber (@zerovabi) <a href="https://twitter.com/zerovabi/status/1348244692354232323?ref_src=twsrc%5Etfw">January 10, 2021</a></blockquote>
<hr />
<p>はい。</p>
<p>そもそもVirtualでなくとも配信者ってすごいと思う。まずはそこから</p>
<h1 id="配信者のどこがすごいのか">配信者のどこがすごいのか</h1>
<h2 id="1. 配信の内容がある">1. 配信の内容がある</h2>
<p>いやマジで全てはこれ。特に雑談枠と企画枠の二つ。 私からしたらなぜあんなにも面白い話ができるのか微塵たりともわからない。<br />
雑談ってお前、雑な談話やぞ？？って思われるかもしれないけど、 雑な談話の方が難しくないですか？？？テーマ決まってたほうが話しやすい。<br />
主がコミュ障なだけやろ？？と言われるとそれはそうで何も言えないんですが。<br />
これは配信者の適性というか、そもそもコミュニケーションの適性みたいなところでは あるけれどすごいなって毎回思っています。</p>
<h2 id="2. 雑談が謎に面白い">2. 雑談が謎に面白い</h2>
<p>内容が、というのもありますが「別段めっちゃ面白いトピックじゃないのに なぜかめちゃくちゃ聞いてて面白い」っていう事例が割とある気がしています。<br />
具体例とか言われると思い出せないんですが、まぁ逆にいうとそのくらいどうでもいいような 内容でも面白いというか。</p>
<h2 id="3. なんか知らんけどゲームしながら話ができる">3. なんか知らんけどゲームしながら話ができる</h2>
<p>これはゲーム配信する人(VTuber見てるので多いがち)に限った話なんですけど、ゲームしながら話してるのすごいと思う。</p>
<h2 id="4. 時間が取れる">4. 時間が取れる</h2>
<p>配信時間ってよく確保できますね？？？</p>
<h2 id="5. 積極的に宣伝できる">5. 積極的に宣伝できる</h2>
<p>これ地味にすごく大事で、かつすごくすごいなって思うことの一つ。<br />
わりかし配信に自信がないと宣伝って難しいと思うんですよ。 でも、宣伝しないと人ってこないんですよ。結果的に自信もつかないんですよ。</p>
<p>まぁ~~主がコミュ障だからってのは言わないで~~</p>
<h2 id="6. 声出せる環境がある">6. 声出せる環境がある</h2>
<p>これはすごいというより羨ましいの部分なのかもしれない。 私は家の都合とか立地とかの問題であまり声が出せない。 小声でやってるけど音漏れしないかビクビクしています。ぴぇん。</p>
<p>まぁここまで些細なことはどうでも良いとしても、「大きな声を出せる」 っていうの自体でもすごいなと。声を出すのって勇気入りません？~~え？？コミュs~~</p>
<h2 id="7. 反応が良い(かわいいor面白い)">7. 反応が良い(かわいいor面白い)</h2>
<p>雑談やゲームで何かが起こったときの反応が良い。まぁこれは多分配信者だけじゃなく芸能人とかもそうだとは思う。 なんでなんだろうね？？？？</p>
<h1 id="VTuberのどこがすごいのか">VTuberのどこがすごいのか</h1>
<p>じゃあここからは少し具体的に「VTuber特有のすごさ」をつらつら書きたいと思う</p>
<h2 id="1. 配信ができる(技術)">1. 配信ができる(技術)</h2>
<p>まずこれがすごい。自分でやってみればわかるけど割と面倒。 結構Virtualゆえ+私の特殊事情があるのかもしれないけど、それでもすごいと思う。</p>
<p>特にボイチェン勢つょい。まぁまず声が可愛いのは置いておくとして、反応も可愛いのは置いておくとして、 とりあえず技術面だけを考えても結構すごい。<br />
みんなの環境がわからないけれど、私はmacなのもあり結構大変な思いをしている (ボイチェンはwindowsオンリーが多いんじゃ〜〜)</p>
<p>ちなみに私の音のルーティングは 物理マイク→ボイチェン→GarageBand(ノイズ除去とか)→OBSという流れなのだけど、 仮想オーディオIFの組み方とか面倒なんですよね。多分macなのも悪い。 後これだとイヤホンから聞けなかったりして、それを対応したらBGM聞こえなくなって、... ウオォやる気がﾋﾟﾝﾁ！！</p>
<h2 id="2. パソコンのスペック">2. パソコンのスペック</h2>
<p>これは人によりけりだけど、私の環境だとlive2dも3Dモデルもなしでも あまり画質が出ない。その上なんかぱちょから音がなっておる...<br />
Live2Dでも綺麗に動いてる人が少ないのからして、きちんと写ってる人のスペックやばそうだなぁという気持ち。</p>
<h2 id="3. ママパパ探し">3. ママパパ探し</h2>
<p>念のため書いておくと、ママは元イラストを描いてくれた人、 パパはlive2Dや3Dモデルを作成してくれた人のことを指す用語です。</p>
<p>いやまぁ依頼募集してる人に依頼すればいいというのはそうなのだけども、 行動力。よ。行動力。</p>
]]></summary>
</entry>
<entry>
    <title>ブログの見た目を整える</title>
    <link href="https://cj-bc.github.io/blog/posts/2021-01-03-fomantic-ui.html" />
    <id>https://cj-bc.github.io/blog/posts/2021-01-03-fomantic-ui.html</id>
    <published>2021-01-03T00:00:00Z</published>
    <updated>2021-01-03T00:00:00Z</updated>
    <summary type="html"><![CDATA[<div class="ui center aligned icon header">
  <h1>ブログの見た目を整える</h1>
  <div class="ui list">
    <div class="item">Posted on January  3, 2021</div>
    <div class="item">
      <i class="history icon"></i>
      Updated on January  5, 2021
    </div>
  </div>
    
        by Cj-bc
    
</div>
<div class="info">
  
  <a title="All pages tagged &#39;hakyll&#39;." href="/tags/hakyll.html" class="ui tag label">hakyll</a><a title="All pages tagged &#39;ブログ&#39;." href="/tags/%E3%83%96%E3%83%AD%E3%82%B0.html" class="ui tag label">ブログ</a><a title="All pages tagged &#39;haskell&#39;." href="/tags/haskell.html" class="ui tag label">haskell</a>
  
</div>

<h1 id="コードブロックの整形">コードブロックの整形</h1>
<p>今まで、コードブロックは酷い見た目でした。 <img src="/images/old-codeblock.png" class="ui rounded image" alt="前までのコードブロック" /></p>
<p>現在は以下のように表示されるようになりました！</p>
<div class="ui segment">
<div class="ui top right attached label">
haskell
</div>
<div class="sourceCode" id="cb1"><pre class="sourceCode haskell SourceCode"><code class="sourceCode haskell"><span id="cb1-1"><a href="#cb1-1" aria-hidden="true"></a>main <span class="ot">=</span> <span class="kw">do</span></span>
<span id="cb1-2"><a href="#cb1-2" aria-hidden="true"></a>    <span class="fu">putStrLn</span> <span class="st">&quot;Hello world!&quot;</span></span></code></pre></div>
</div>
<h2 id="やったこと">やったこと</h2>
<p>ここでは、以下のFomantic-UI要素を使用しました。</p>
<ul>
<li>Segment</li>
<li>Attached label</li>
</ul>
<p>又、各コードブロックに同じ処理をするために、Hakyllの<code>pandocCompilerWithTransform</code>を使用しています。 syntaxhilightは<a href="https://stackoverflow.com/a/43699538"><code>Hakyll</code>に合わせて</a><code>Highlight.js</code>を使用しています。</p>
<h3 id="最終的なHTML">最終的なHTML</h3>
<div class="ui segment">
<div class="ui top right attached label">
html
</div>
<div class="sourceCode" id="cb2"><pre class="sourceCode html SourceCode"><code class="sourceCode html"><span id="cb2-1"><a href="#cb2-1" aria-hidden="true"></a><span class="kw">&lt;div</span><span class="ot"> class=</span><span class="st">&quot;ui segment&quot;</span><span class="kw">&gt;</span></span>
<span id="cb2-2"><a href="#cb2-2" aria-hidden="true"></a>    <span class="kw">&lt;div</span><span class="ot"> class=</span><span class="st">&quot;ui top right attached label&quot;</span><span class="kw">&gt;</span> haskell <span class="kw">&lt;/div&gt;</span></span>
<span id="cb2-3"><a href="#cb2-3" aria-hidden="true"></a>    <span class="kw">&lt;div</span><span class="ot"> class=</span><span class="st">&quot;sourceCode&quot;</span><span class="ot"> id=</span><span class="st">&quot;cb1&quot;</span><span class="kw">&gt;</span></span>
<span id="cb2-4"><a href="#cb2-4" aria-hidden="true"></a>        <span class="kw">&lt;pre</span><span class="ot"> class=</span><span class="st">&quot;sourceCode haskell SourceCode&quot;</span><span class="kw">&gt;</span></span>
<span id="cb2-5"><a href="#cb2-5" aria-hidden="true"></a>            <span class="kw">&lt;code</span><span class="ot"> class=</span><span class="st">&quot;sourceCode haskell hljs bash&quot;</span><span class="kw">&gt;</span></span>
<span id="cb2-6"><a href="#cb2-6" aria-hidden="true"></a>                <span class="kw">&lt;span</span><span class="ot"> id=</span><span class="st">&quot;cb1-1&quot;</span><span class="kw">&gt;&lt;a</span><span class="ot"> href=</span><span class="st">&quot;#cb1-1&quot;</span><span class="ot"> aria-hidden=</span><span class="st">&quot;true&quot;</span><span class="kw">&gt;&lt;/a&gt;</span></span>
<span id="cb2-7"><a href="#cb2-7" aria-hidden="true"></a>                    main</span>
<span id="cb2-8"><a href="#cb2-8" aria-hidden="true"></a>                    <span class="kw">&lt;span</span><span class="ot"> class=</span><span class="st">&quot;ot&quot;</span><span class="kw">&gt;</span>=<span class="kw">&lt;/span&gt;</span></span>
<span id="cb2-9"><a href="#cb2-9" aria-hidden="true"></a>                    <span class="kw">&lt;span</span><span class="ot"> class=</span><span class="st">&quot;kw&quot;</span><span class="kw">&gt;&lt;span</span><span class="ot"> class=</span><span class="st">&quot;hljs-keyword&quot;</span><span class="kw">&gt;</span>do<span class="kw">&lt;/span&gt;&lt;/span&gt;</span></span>
<span id="cb2-10"><a href="#cb2-10" aria-hidden="true"></a>                <span class="kw">&lt;/span&gt;</span></span>
<span id="cb2-11"><a href="#cb2-11" aria-hidden="true"></a>                <span class="kw">&lt;span</span><span class="ot"> id=</span><span class="st">&quot;cb1-2&quot;</span><span class="kw">&gt;&lt;a</span><span class="ot"> href=</span><span class="st">&quot;#cb1-2&quot;</span><span class="ot"> aria-hidden=</span><span class="st">&quot;true&quot;</span><span class="kw">&gt;&lt;/a&gt;</span>    </span>
<span id="cb2-12"><a href="#cb2-12" aria-hidden="true"></a>                    <span class="kw">&lt;span</span><span class="ot"> class=</span><span class="st">&quot;fu&quot;</span><span class="kw">&gt;</span>putStrLn<span class="kw">&lt;/span&gt;</span> </span>
<span id="cb2-13"><a href="#cb2-13" aria-hidden="true"></a>                    <span class="kw">&lt;span</span><span class="ot"> class=</span><span class="st">&quot;st&quot;</span><span class="kw">&gt;&lt;span</span><span class="ot"> class=</span><span class="st">&quot;hljs-string&quot;</span><span class="kw">&gt;</span>&quot;Hello world!&quot;<span class="kw">&lt;/span&gt;&lt;/span&gt;</span></span>
<span id="cb2-14"><a href="#cb2-14" aria-hidden="true"></a>                <span class="kw">&lt;/span&gt;</span></span>
<span id="cb2-15"><a href="#cb2-15" aria-hidden="true"></a>            <span class="kw">&lt;/code&gt;</span></span>
<span id="cb2-16"><a href="#cb2-16" aria-hidden="true"></a>        <span class="kw">&lt;/pre&gt;</span></span>
<span id="cb2-17"><a href="#cb2-17" aria-hidden="true"></a>    <span class="kw">&lt;/div&gt;</span></span>
<span id="cb2-18"><a href="#cb2-18" aria-hidden="true"></a><span class="kw">&lt;/div&gt;</span></span></code></pre></div>
</div>
<h3 id="pandocCompilerWithTransformを使用した処理"><code>pandocCompilerWithTransform</code>を使用した処理</h3>
<p><code>pandocCompilerWithTransform</code>は<code>pandocCompiler</code>の一種で、Markdownなどを<code>Pandoc</code>型に変換しその値をいじることができます。 <code>Pandoc</code>型には便利な型クラス<code>Walkable</code>があるので、これを使用します。</p>
<p><code>Walkable</code>とは、「値の中を歩き、各子要素を与えられた関数に適用して置き換える」ような処理をします。</p>
<ul class="task-list">
<li><input type="checkbox" disabled="" />
WIP</li>
</ul>
<h3 id="右上に拡張子を表示する">右上に拡張子を表示する</h3>
<p>右上に拡張子を表示するために使われているのが、<a href="https://fomantic-ui.com/elements/label.html#attached">attached label</a>です。 注意する点として、これは「コードブロックとは別の<code>div</code>として使用する」必要があります。</p>
<h3 id="親Divにsegmentを設定する">親<code>Div</code>に<code>segment</code>を設定する</h3>
<p><code>code</code>ブロックの親の<code>Div</code>に、<code>class="ui segment"</code>を設定してください。 (他の要素はあっても大丈夫だと思いますが、とにかく<a href="https://fomantic-ui.com/elements/segment.html">segment</a>が必要です。)<br />
尚、きちんと調べているわけではないので、他のものでも代用できるのかもしれません。</p>
<p><img src="/images/attached-label-wraped-in-segment.png" class="ui rounded image" alt="segmentがある場合" /> <em>(赤丸は注釈)</em></p>
<p>これをしない場合、ひとまわり上の<code>segment</code>、どこにもない場合webページの右上にこのラベルが表示されることになります。</p>
<p><img src="/images/attached-label-not-wraped-in-segment.png" class="ui rounded image" alt="segmentがない場合" /> <em>(赤丸は注釈)</em></p>
<h3 id="テキストの折り返し">テキストの折り返し</h3>
<p>これはシンプルにCSSの<code>overflow:auto</code>を使っています。</p>
<h1 id="画像の整形">画像の整形</h1>
<p>これまでは画像が正しいサイズになっておらず、このようになっていました。</p>
<p><img src="/images/old-image-view.png" class="ui rounded image" alt="昔の画像表示" /></p>
<p>現在は、この画像のようになっています。</p>
<p><img src="/images/current-image.view.png" class="ui rounded image" alt="今の画像表示" /></p>
<h2 id="ui image"><code>ui image</code></h2>
<p><code>ui image</code>を使うことで、親のSegment以内に納めてくれます。<br />
又それにプラスして<code>rounded</code>をつけることで角を丸めています。 (最終的には<code>ui rounded image</code>となりました)</p>
<h1 id="メニューの作成">メニューの作成</h1>
<p>画面上部にあるメニューを作成しました。 これは主に<code>ui menu</code>を使っています。 それに追加して、viewportの上部に固定するために<code>fixed</code>を、色を反転させるために<code>inverted</code>をつけています。</p>
<h2 id="コンテンツの内容がかぶらないようにする">コンテンツの内容がかぶらないようにする</h2>
<p><code>fixed</code>を使った場合、そのままでは下のdiv(このサイトではidとして<code>content</code>を持つdiv)の内容に被ってしまいます。</p>
<p><img src="/images/fixed-menu-without-margin.png" class="ui rounded image" alt="何も対処しない場合" /></p>
<p>そこで、<code>content</code> divに<code>margin-top: 5em</code>を適用しています。<br />
尚これは、同じ構成をしていた<a href="https://fomantic-ui.com/collections/menu.html">Fomantic-UIのモバイルページ</a>での設定値をそのまま持ってきています。 (モバイル端末で見るか、ブラウザの横幅を狭めれば見えると思います)</p>
<div class="ui segment">
<div class="ui top right attached label">
css
</div>
<div class="sourceCode" id="cb3"><pre class="sourceCode css SourceCode"><code class="sourceCode css"><span id="cb3-1"><a href="#cb3-1" aria-hidden="true"></a><span class="pp">#content</span> {</span>
<span id="cb3-2"><a href="#cb3-2" aria-hidden="true"></a>    <span class="kw">margin-top</span>: <span class="dv">5</span><span class="dt">em</span><span class="op">;</span></span>
<span id="cb3-3"><a href="#cb3-3" aria-hidden="true"></a>}</span></code></pre></div>
</div>
<h2 id="Feedのリンクを右づめにする">Feedのリンクを右づめにする</h2>
<p><code>menu</code>の中にある<code>item</code>に、<code>right</code>と入れるだけでそこから下の<code>item</code>全てが右詰になります。 このサイトだと以下のようになっています。</p>
<div class="ui segment">
<div class="ui top right attached label">
html
</div>
<div class="sourceCode" id="cb4"><pre class="sourceCode html SourceCode"><code class="sourceCode html"><span id="cb4-1"><a href="#cb4-1" aria-hidden="true"></a><span class="kw">&lt;div</span><span class="ot"> id=</span><span class="st">&quot;header&quot;</span><span class="ot"> class=</span><span class="st">&quot;ui fixed inverted menu&quot;</span><span class="kw">&gt;</span></span>
<span id="cb4-2"><a href="#cb4-2" aria-hidden="true"></a>    <span class="co">&lt;!-- 省略 --&gt;</span></span>
<span id="cb4-3"><a href="#cb4-3" aria-hidden="true"></a>    <span class="kw">&lt;a</span><span class="ot"> href=</span><span class="st">&quot;/feeds/atom/general.xml&quot;</span><span class="ot"> class=</span><span class="st">&quot;right item&quot;</span><span class="kw">&gt;</span>Atom feed<span class="kw">&lt;/a&gt;</span></span>
<span id="cb4-4"><a href="#cb4-4" aria-hidden="true"></a>    <span class="kw">&lt;a</span><span class="ot"> href=</span><span class="st">&quot;/feeds/rss/general.xml&quot;</span><span class="ot"> class=</span><span class="st">&quot;item&quot;</span><span class="kw">&gt;&lt;i</span><span class="ot"> class=</span><span class="st">&quot;rss icon&quot;</span><span class="kw">&gt;&lt;/i&gt;&lt;/a&gt;</span></span>
<span id="cb4-5"><a href="#cb4-5" aria-hidden="true"></a><span class="kw">&lt;/div&gt;</span></span></code></pre></div>
</div>
]]></summary>
</entry>
<entry>
    <title>pandocのBlock</title>
    <link href="https://cj-bc.github.io/blog/posts/2020-11-16-pandoc-orderedlist-attr-view.html" />
    <id>https://cj-bc.github.io/blog/posts/2020-11-16-pandoc-orderedlist-attr-view.html</id>
    <published>2020-11-16T00:00:00Z</published>
    <updated>2020-11-16T00:00:00Z</updated>
    <summary type="html"><![CDATA[<div class="ui center aligned icon header">
  <h1>pandocのBlock</h1>
  <div class="ui list">
    <div class="item">Posted on November 16, 2020</div>
    <div class="item">
      <i class="history icon"></i>
      Updated on November 17, 2020
    </div>
  </div>
    
</div>
<div class="info">
  
  <a title="All pages tagged &#39;pandoc&#39;." href="/tags/pandoc.html" class="ui tag label">pandoc</a><a title="All pages tagged &#39;haskell&#39;." href="/tags/haskell.html" class="ui tag label">haskell</a>
  
</div>

<p><a href="https://hackage.haskell.org/package/pandoc-types-1.22/docs/Text-Pandoc-Definition.html#t:Block">hackage</a>と<a href="https://pandoc.org/MANUAL.html">pandoc manual</a> を見てもよくわからないので、markdownに変換して試してみた。</p>
<h1 id="OrderedList">OrderedList</h1>
<h2 id="ListNumberStyle">ListNumberStyle</h2>
<p><a href="https://hackage.haskell.org/package/pandoc-types-1.22/docs/Text-Pandoc-Definition.html#t:ListNumberStyle">ListNumberStyle</a>は、 数字表現(1,2,3なのかi,ii,iiiなのかなど)を決めるもの。 わかりやすいように他の内容は一致させています。</p>
<div class="ui segment">
<div class="ui top right attached label">
haskell
</div>
<div class="sourceCode" id="cb1"><pre class="sourceCode haskell SourceCode"><code class="sourceCode haskell"><span id="cb1-1"><a href="#cb1-1" aria-hidden="true"></a>[<span class="dt">OrderedList</span> (<span class="dv">1</span>,<span class="dt">DefaultStyle</span>,<span class="dt">TwoParens</span>) [[<span class="dt">Plain</span> [<span class="dt">Str</span> <span class="st">&quot;hoge&quot;</span>]],[<span class="dt">Plain</span> [<span class="dt">Str</span> <span class="st">&quot;foo&quot;</span>]]]</span>
<span id="cb1-2"><a href="#cb1-2" aria-hidden="true"></a>,<span class="dt">OrderedList</span> (<span class="dv">1</span>, <span class="dt">Example</span>,<span class="dt">TwoParens</span>)     [[<span class="dt">Plain</span> [<span class="dt">Str</span> <span class="st">&quot;hoge&quot;</span>]],[<span class="dt">Plain</span> [<span class="dt">Str</span> <span class="st">&quot;foo&quot;</span>]]]</span>
<span id="cb1-3"><a href="#cb1-3" aria-hidden="true"></a>,<span class="dt">OrderedList</span> (<span class="dv">1</span>,<span class="dt">Decimal</span>,<span class="dt">TwoParens</span>)      [[<span class="dt">Plain</span> [<span class="dt">Str</span> <span class="st">&quot;hoge&quot;</span>]],[<span class="dt">Plain</span> [<span class="dt">Str</span> <span class="st">&quot;foo&quot;</span>]]]</span>
<span id="cb1-4"><a href="#cb1-4" aria-hidden="true"></a>,<span class="dt">OrderedList</span> (<span class="dv">1</span>,<span class="dt">LowerRoman</span>,<span class="dt">TwoParens</span>)   [[<span class="dt">Plain</span> [<span class="dt">Str</span> <span class="st">&quot;hoge&quot;</span>]],[<span class="dt">Plain</span> [<span class="dt">Str</span> <span class="st">&quot;foo&quot;</span>]]]</span>
<span id="cb1-5"><a href="#cb1-5" aria-hidden="true"></a>,<span class="dt">OrderedList</span> (<span class="dv">1</span>,<span class="dt">UpperRoman</span>,<span class="dt">TwoParens</span>)   [[<span class="dt">Plain</span> [<span class="dt">Str</span> <span class="st">&quot;hoge&quot;</span>]],[<span class="dt">Plain</span> [<span class="dt">Str</span> <span class="st">&quot;foo&quot;</span>]]]</span>
<span id="cb1-6"><a href="#cb1-6" aria-hidden="true"></a>,<span class="dt">OrderedList</span> (<span class="dv">1</span>,<span class="dt">LowerAlpha</span>,<span class="dt">TwoParens</span>)   [[<span class="dt">Plain</span> [<span class="dt">Str</span> <span class="st">&quot;hoge&quot;</span>]],[<span class="dt">Plain</span> [<span class="dt">Str</span> <span class="st">&quot;foo&quot;</span>]]]</span>
<span id="cb1-7"><a href="#cb1-7" aria-hidden="true"></a>,<span class="dt">OrderedList</span> (<span class="dv">1</span>,<span class="dt">UpperAlpha</span>,<span class="dt">TwoParens</span>)   [[<span class="dt">Plain</span> [<span class="dt">Str</span> <span class="st">&quot;hoge&quot;</span>]],[<span class="dt">Plain</span> [<span class="dt">Str</span> <span class="st">&quot;foo&quot;</span>]]]</span>
<span id="cb1-8"><a href="#cb1-8" aria-hidden="true"></a>]</span></code></pre></div>
</div>
<p>これをvimで開き、<code>%!pandoc -f native -t markdown</code>で試した。これ便利なのでおすすめ。 その結果が以下:</p>
<div class="ui segment">
<div class="ui top right attached label">
markdown
</div>
<div class="sourceCode" id="cb2"><pre class="sourceCode markdown result SourceCode"><code class="sourceCode markdown"><span id="cb2-1"><a href="#cb2-1" aria-hidden="true"></a>(1) hoge</span>
<span id="cb2-2"><a href="#cb2-2" aria-hidden="true"></a>(2) foo</span>
<span id="cb2-3"><a href="#cb2-3" aria-hidden="true"></a></span>
<span id="cb2-4"><a href="#cb2-4" aria-hidden="true"></a>(1) hoge</span>
<span id="cb2-5"><a href="#cb2-5" aria-hidden="true"></a>(2) foo</span>
<span id="cb2-6"><a href="#cb2-6" aria-hidden="true"></a></span>
<span id="cb2-7"><a href="#cb2-7" aria-hidden="true"></a>(1) hoge</span>
<span id="cb2-8"><a href="#cb2-8" aria-hidden="true"></a>(2) foo</span>
<span id="cb2-9"><a href="#cb2-9" aria-hidden="true"></a></span>
<span id="cb2-10"><a href="#cb2-10" aria-hidden="true"></a>(i) hoge</span>
<span id="cb2-11"><a href="#cb2-11" aria-hidden="true"></a>(ii) foo</span>
<span id="cb2-12"><a href="#cb2-12" aria-hidden="true"></a></span>
<span id="cb2-13"><a href="#cb2-13" aria-hidden="true"></a>(I) hoge</span>
<span id="cb2-14"><a href="#cb2-14" aria-hidden="true"></a>(II) foo</span>
<span id="cb2-15"><a href="#cb2-15" aria-hidden="true"></a></span>
<span id="cb2-16"><a href="#cb2-16" aria-hidden="true"></a>(a) hoge</span>
<span id="cb2-17"><a href="#cb2-17" aria-hidden="true"></a>(b) foo</span>
<span id="cb2-18"><a href="#cb2-18" aria-hidden="true"></a></span>
<span id="cb2-19"><a href="#cb2-19" aria-hidden="true"></a>(A) hoge</span>
<span id="cb2-20"><a href="#cb2-20" aria-hidden="true"></a>(B) foo</span></code></pre></div>
</div>
<p><code>Default</code>/<code>Example</code>はどうやらDecimalになってしまう模様。あとは大体名前の通りになった。</p>
<h2 id="ListNumberDelim">ListNumberDelim</h2>
<p><a href="https://hackage.haskell.org/package/pandoc-types-1.22/docs/Text-Pandoc-Definition.html#t:ListNumberDelim">ListNumberDelim</a> は、数字の後につくやつ。<br />
コードは基本先ほどと同じものを使用</p>
<div class="ui segment">
<div class="ui top right attached label">
haskell
</div>
<div class="sourceCode" id="cb3"><pre class="sourceCode haskell SourceCode"><code class="sourceCode haskell"><span id="cb3-1"><a href="#cb3-1" aria-hidden="true"></a>[<span class="dt">OrderedList</span> (<span class="dv">1</span>,<span class="dt">DefaultStyle</span>,<span class="dt">DefaultDelim</span>) [[<span class="dt">Plain</span> [<span class="dt">Str</span> <span class="st">&quot;hoge&quot;</span>]],[<span class="dt">Plain</span> [<span class="dt">Str</span> <span class="st">&quot;foo&quot;</span>]]]</span>
<span id="cb3-2"><a href="#cb3-2" aria-hidden="true"></a>,<span class="dt">OrderedList</span> (<span class="dv">1</span>,<span class="dt">DefaultStyle</span>,<span class="dt">Period</span>)       [[<span class="dt">Plain</span> [<span class="dt">Str</span> <span class="st">&quot;hoge&quot;</span>]],[<span class="dt">Plain</span> [<span class="dt">Str</span> <span class="st">&quot;foo&quot;</span>]]]</span>
<span id="cb3-3"><a href="#cb3-3" aria-hidden="true"></a>,<span class="dt">OrderedList</span> (<span class="dv">1</span>,<span class="dt">DefaultStyle</span>,<span class="dt">OneParen</span>)     [[<span class="dt">Plain</span> [<span class="dt">Str</span> <span class="st">&quot;hoge&quot;</span>]],[<span class="dt">Plain</span> [<span class="dt">Str</span> <span class="st">&quot;foo&quot;</span>]]]</span>
<span id="cb3-4"><a href="#cb3-4" aria-hidden="true"></a>,<span class="dt">OrderedList</span> (<span class="dv">1</span>,<span class="dt">DefaultStyle</span>,<span class="dt">TwoParens</span>)    [[<span class="dt">Plain</span> [<span class="dt">Str</span> <span class="st">&quot;hoge&quot;</span>]],[<span class="dt">Plain</span> [<span class="dt">Str</span> <span class="st">&quot;foo&quot;</span>]]]</span>
<span id="cb3-5"><a href="#cb3-5" aria-hidden="true"></a>]</span></code></pre></div>
</div>
<p>結果が以下。</p>
<div class="ui segment">
<div class="ui top right attached label">
markdown
</div>
<div class="sourceCode" id="cb4"><pre class="sourceCode markdown result SourceCode"><code class="sourceCode markdown"><span id="cb4-1"><a href="#cb4-1" aria-hidden="true"></a><span class="ss">1.  </span>hoge</span>
<span id="cb4-2"><a href="#cb4-2" aria-hidden="true"></a><span class="ss">2.  </span>foo</span>
<span id="cb4-3"><a href="#cb4-3" aria-hidden="true"></a></span>
<span id="cb4-4"><a href="#cb4-4" aria-hidden="true"></a><span class="ss">1.  </span>hoge</span>
<span id="cb4-5"><a href="#cb4-5" aria-hidden="true"></a><span class="ss">2.  </span>foo</span>
<span id="cb4-6"><a href="#cb4-6" aria-hidden="true"></a></span>
<span id="cb4-7"><a href="#cb4-7" aria-hidden="true"></a>1)  hoge</span>
<span id="cb4-8"><a href="#cb4-8" aria-hidden="true"></a>2)  foo</span>
<span id="cb4-9"><a href="#cb4-9" aria-hidden="true"></a></span>
<span id="cb4-10"><a href="#cb4-10" aria-hidden="true"></a>(1) hoge</span>
<span id="cb4-11"><a href="#cb4-11" aria-hidden="true"></a>(2) foo</span></code></pre></div>
</div>
<h1 id="DefinitionList">DefinitionList</h1>
<p><a href="">DefinitionList</a></p>
<div class="ui segment">
<div class="ui top right attached label">
haskell
</div>
<div class="sourceCode" id="cb5"><pre class="sourceCode haskell SourceCode"><code class="sourceCode haskell"><span id="cb5-1"><a href="#cb5-1" aria-hidden="true"></a>[<span class="dt">DefinitionList</span></span>
<span id="cb5-2"><a href="#cb5-2" aria-hidden="true"></a> [([<span class="dt">Str</span> <span class="st">&quot;term&quot;</span>],</span>
<span id="cb5-3"><a href="#cb5-3" aria-hidden="true"></a>   [[<span class="dt">Plain</span> [<span class="dt">Str</span> <span class="st">&quot;One&quot;</span>,<span class="dt">Space</span>,<span class="dt">Str</span> <span class="st">&quot;definition&quot;</span>,<span class="dt">Space</span>,<span class="dt">Str</span> <span class="st">&quot;here&quot;</span>]]</span>
<span id="cb5-4"><a href="#cb5-4" aria-hidden="true"></a>   ,[<span class="dt">Plain</span> [<span class="dt">Str</span> <span class="st">&quot;Second?&quot;</span>,<span class="dt">SoftBreak</span>,<span class="dt">Str</span> <span class="st">&quot;:&quot;</span>], <span class="dt">Plain</span> [<span class="dt">Str</span><span class="st">&quot;Second&quot;</span>, <span class="dt">Space</span>,<span class="dt">Str</span> <span class="st">&quot;line&quot;</span>,<span class="dt">Space</span>,<span class="dt">Str</span> <span class="st">&quot;of&quot;</span>,<span class="dt">Space</span>, <span class="dt">Str</span> <span class="st">&quot;definition&quot;</span>]]</span>
<span id="cb5-5"><a href="#cb5-5" aria-hidden="true"></a>   ]</span>
<span id="cb5-6"><a href="#cb5-6" aria-hidden="true"></a> )]</span>
<span id="cb5-7"><a href="#cb5-7" aria-hidden="true"></a>]</span></code></pre></div>
</div>
<div class="ui segment">
<div class="ui top right attached label">
markdown
</div>
<div class="sourceCode" id="cb6"><pre class="sourceCode markdown SourceCode"><code class="sourceCode markdown"><span id="cb6-1"><a href="#cb6-1" aria-hidden="true"></a>term</span>
<span id="cb6-2"><a href="#cb6-2" aria-hidden="true"></a>:   One definition here</span>
<span id="cb6-3"><a href="#cb6-3" aria-hidden="true"></a>:   Second? :</span>
<span id="cb6-4"><a href="#cb6-4" aria-hidden="true"></a>:   Maybe second, maybe third</span></code></pre></div>
</div>
]]></summary>
</entry>
<entry>
    <title>vim-pandoc-syntaxでurlを非表示にしたい</title>
    <link href="https://cj-bc.github.io/blog/posts/2020-11-13-pandoc-vim-conceal-url-by-default.html" />
    <id>https://cj-bc.github.io/blog/posts/2020-11-13-pandoc-vim-conceal-url-by-default.html</id>
    <published>2020-11-13T00:00:00Z</published>
    <updated>2020-11-13T00:00:00Z</updated>
    <summary type="html"><![CDATA[<div class="ui center aligned icon header">
  <h1>vim-pandoc-syntaxでurlを非表示にしたい</h1>
  <div class="ui list">
    <div class="item">Posted on November 13, 2020</div>
    <div class="item">
      <i class="history icon"></i>
      Updated on November 13, 2020
    </div>
  </div>
    
</div>
<div class="info">
  
  <a title="All pages tagged &#39;vim&#39;." href="/tags/vim.html" class="ui tag label">vim</a><a title="All pages tagged &#39;pandoc&#39;." href="/tags/pandoc.html" class="ui tag label">pandoc</a>
  
</div>

<h1 id="vimwikiのハイライトが欲しい">vimwikiのハイライトが欲しい</h1>
<h1 id="markdown/vimwiki/pandocのsyntaxハイライト">markdown/vimwiki/pandocのsyntaxハイライト</h1>
<p>vimwikiのsyntaxでは、以下のようなリンクは</p>
<div class="ui segment">
<div class="ui top right attached label">
markdown
</div>
<div class="sourceCode" id="cb1"><pre class="sourceCode markdown SourceCode"><code class="sourceCode markdown"><span id="cb1-1"><a href="#cb1-1" aria-hidden="true"></a><span class="co">[</span><span class="ot">説明</span><span class="co">](url)</span></span></code></pre></div>
</div>
<p>このように表示されます(<code>+conceal</code>オプションが有効な場合)</p>
<p><a href="url">説明</a></p>
<p>これがあると、長いURLを持つドキュメントでの可読性がグンと上がります</p>
<p>例えば、<a href="https://cj-bc.github.io/blog/posts/2020-08-19-blender-data-blocks.html">blender data blocks</a>の記事は<code>markdown</code>/<code>vimwiki</code>/<code>pandoc</code>それぞれのsyntaxで 以下のように見えます。</p>
<p><img src="/images/difference_md-vimwiki-pandoc.png" class="ui rounded image" alt="markdown, vimwiki, pandocのハイライトの違い" /></p>
<p>さて、これを普段使いの<code>pandoc</code>syntaxでも使いたいというのが今回の希望です。</p>
<h1 id="結論: デフォルトの変数を設定しろ">結論: デフォルトの変数を設定しろ</h1>
<p>もうこれが答えでした！<br />
ドキュメントよもうね！！！！</p>
<div class="ui segment">
<div class="ui top right attached label">
vim
</div>
<pre class="vim SourceCode"><code>let g:pandoc#syntax#conceal#urls = 1</code></pre>
</div>
<p>これだけでURLの<code>conceal</code>が有効になり、vimwikiと同じような見た目になります</p>
<p><img src="/images/pandoc-with-conceal.png" class="ui rounded image" alt="設定後のpandoc" /></p>
<h1 id="おまけ">おまけ</h1>
<p>ちなみに該当のコードは<a href="https://github.com/vim-pandoc/vim-pandoc-syntax/blob/2521e2e9b99a3550e1a20f24e09fa46679cbbbc7/syntax/pandoc.vim#L300-L304">300-304行目</a>にありました。</p>
<div class="ui segment">
<div class="ui top right attached label">
vim
</div>
<pre class="vim SourceCode"><code>if g:pandoc#syntax#conceal#urls == 1
    syn region pandocReferenceURL matchgroup=pandocOperator start=/\]\@1&lt;=(/ end=/)/ keepend conceal
else
    syn region pandocReferenceURL matchgroup=pandocOperator start=/\]\@1&lt;=(/ end=/)/ keepend
endif</code></pre>
</div>
]]></summary>
</entry>

</feed>
