* 2022/02/27
  :PROPERTIES:
  :DATE: [2022-02-27 Sun 00:37]
  :TAGS: 
  :BLOG_POST_KIND: Diary
  :BLOG_POST_PROGRESS: Empty
  :BLOG_POST_STATUS: Normal
  :END:
  

** 出来事
   + [[https://www.youtube.com/watch?v=Ev5qzT0VnTo][みあちゃんスプラ大会配信]]
   + [[https://www.youtube.com/watch?v=GTa2HxIsBPM][Kizuna AI last live]]
   + AIちゃんスリープ
   + [[https://www.youtube.com/watch?v=v3yWm0Crtaw][ゆあちゃんエルデン24時間耐久(前半)]]
   + [[https://twitter.com/nalgami/status/1497372362857410560?s=20&t=LkmskTlFlhhJ_pjBXMqLYA][POLYGON TAILOR IMPORT最初のFACEATSM BUG MA-1]]発売日アナウンス、3/1発売

** やったこと
   + piping-server-rustにクリップボード連携機能を自分用に作成した
     + [[https://github.com/nwtgck/piping-server-rust][nwtgck/piping-server-rust]]のコード読んだ
     + [[https://doc.rust-jp.rs/book-ja/][The Rust Programming Language 日本語版]]の1,3章読んだ
   + 配信見てた
   

** 知ったこと
   + Rustの基礎をちょこっと
   + [[https://docs.rs/crate/clipboard/0.5.0][Rust -- Clipboard]]
   + Rustで子プロセスを作成するには ~std::process::Command~
   + 子プロセスとの通信は ~std::process::Stdio~
   + RustでHttpのBody取るには ~hyper::body::to_bytes~ が使える

*** Rustで子プロセス

**** 子プロセスの作成:

     + [[https://doc.rust-lang.org/std/process/struct.Command.html#method.stdin][std::process::Command]]
     + [[https://doc.rust-lang.org/std/process/struct.Command.html#method.spawn][std::process::Command.spawn()]]
     #+begin_src rust
       let child: Child = Command::new("xsel").arg("-xb").stdin(Stdio::piped()).spawn().expect("Failed to spawn child process")
     #+end_src

**** パイプへの書き込み

     + [[https://doc.rust-lang.org/std/process/struct.Child.html][std::process::Child]]
     + [[https://doc.rust-lang.org/std/process/struct.ChildStdin.html][std::process::ChildStdin]]

     #+begin_src rust
       // takeよくわかってない
       let b: Bytes = // 
       child.stdin.take().expect("failed to open stdin").write(b);

     #+end_src
** やること
